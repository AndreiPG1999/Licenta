{"ast":null,"code":"import _asyncToGenerator from \"D:/Licenta/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet PacientiComponent = class PacientiComponent {\n  constructor(userService, token) {\n    this.userService = userService;\n    this.token = token;\n  }\n\n  ngOnInit() {\n    this.currentUser = this.token.getUser();\n    this.userService.findUser(this.currentUser.email).subscribe({\n      next: response => {\n        this.loggedInUser = response;\n        console.log(this.loggedInUser);\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n    this.getUsers();\n  }\n\n  getUsers() {\n    this.userService.getUsers().subscribe({\n      next: response => {\n        this.users = response;\n        console.log(this.users);\n        this.userService.findUsersByTypePacienti(this.loggedInUser.id).subscribe({\n          next: response => {\n            this.neededUsers = response;\n            console.log(this.neededUsers);\n          },\n          error: error => {\n            alert(error.message);\n          }\n        });\n      },\n      error: error => {\n        alert(error.message);\n      }\n    });\n  }\n\n  searchUsers(key) {\n    const results = [];\n\n    for (const user of this.users) {\n      if (user.last_name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || user.first_name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || user.email.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(user);\n      }\n    }\n\n    this.users = results;\n\n    if (results.length === 0 || !key) {\n      this.getUsers();\n    }\n  }\n\n  onUnasignPacient(user) {\n    if (confirm(\"Sunteți sigur că doriți să renunțați la acest pacient?\")) {\n      this.userService.updatePacient(user.email, 0).subscribe({\n        next: response => {\n          console.log(response);\n          window.location.reload(); // this.showToasterSuccess();\n        },\n        error: error => {\n          alert(error.message);\n        }\n      });\n    }\n  }\n\n  onDeletePacient(user) {\n    if (confirm(\"Sigur doriți să ștergeți contul acestui pacient?\")) {\n      this.userService.deleteUser(user.email).subscribe({\n        next: function () {\n          var _ref = _asyncToGenerator(function* () {\n            yield new Promise(f => setTimeout(f, 2000));\n            window.location.reload();\n          });\n\n          return function next() {\n            return _ref.apply(this, arguments);\n          };\n        }(),\n        error: error => {\n          alert(error.message);\n        }\n      });\n    }\n  }\n\n};\nPacientiComponent = __decorate([Component({\n  selector: 'app-pacienti',\n  templateUrl: './pacienti.component.html',\n  styleUrls: ['./pacienti.component.css']\n})], PacientiComponent);\nexport { PacientiComponent };","map":{"version":3,"sources":["D:/Licenta/Front/src/app/pacienti/pacienti.component.ts"],"names":["__decorate","Component","PacientiComponent","constructor","userService","token","ngOnInit","currentUser","getUser","findUser","email","subscribe","next","response","loggedInUser","console","log","error","alert","message","getUsers","users","findUsersByTypePacienti","id","neededUsers","searchUsers","key","results","user","last_name","toLowerCase","indexOf","first_name","push","length","onUnasignPacient","confirm","updatePacient","window","location","reload","onDeletePacient","deleteUser","Promise","f","setTimeout","selector","templateUrl","styleUrls"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nlet PacientiComponent = class PacientiComponent {\r\n    constructor(userService, token) {\r\n        this.userService = userService;\r\n        this.token = token;\r\n    }\r\n    ngOnInit() {\r\n        this.currentUser = this.token.getUser();\r\n        this.userService.findUser(this.currentUser.email).subscribe({\r\n            next: (response) => {\r\n                this.loggedInUser = response;\r\n                console.log(this.loggedInUser);\r\n            },\r\n            error: (error) => {\r\n                alert(error.message);\r\n            }\r\n        });\r\n        this.getUsers();\r\n    }\r\n    getUsers() {\r\n        this.userService.getUsers().subscribe({\r\n            next: (response) => {\r\n                this.users = response;\r\n                console.log(this.users);\r\n                this.userService.findUsersByTypePacienti(this.loggedInUser.id).subscribe({\r\n                    next: (response) => {\r\n                        this.neededUsers = response;\r\n                        console.log(this.neededUsers);\r\n                    },\r\n                    error: (error) => {\r\n                        alert(error.message);\r\n                    }\r\n                });\r\n            },\r\n            error: (error) => {\r\n                alert(error.message);\r\n            }\r\n        });\r\n    }\r\n    searchUsers(key) {\r\n        const results = [];\r\n        for (const user of this.users) {\r\n            if (user.last_name.toLowerCase().indexOf(key.toLowerCase()) !== -1 ||\r\n                user.first_name.toLowerCase().indexOf(key.toLowerCase()) !== -1 ||\r\n                user.email.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\r\n                results.push(user);\r\n            }\r\n        }\r\n        this.users = results;\r\n        if (results.length === 0 || !key) {\r\n            this.getUsers();\r\n        }\r\n    }\r\n    onUnasignPacient(user) {\r\n        if (confirm(\"Sunteți sigur că doriți să renunțați la acest pacient?\")) {\r\n            this.userService.updatePacient(user.email, 0).subscribe({\r\n                next: (response) => {\r\n                    console.log(response);\r\n                    window.location.reload();\r\n                    // this.showToasterSuccess();\r\n                },\r\n                error: (error) => {\r\n                    alert(error.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    onDeletePacient(user) {\r\n        if (confirm(\"Sigur doriți să ștergeți contul acestui pacient?\")) {\r\n            this.userService.deleteUser(user.email).subscribe({\r\n                next: async () => {\r\n                    await new Promise(f => setTimeout(f, 2000));\r\n                    window.location.reload();\r\n                },\r\n                error: (error) => {\r\n                    alert(error.message);\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\nPacientiComponent = __decorate([\r\n    Component({\r\n        selector: 'app-pacienti',\r\n        templateUrl: './pacienti.component.html',\r\n        styleUrls: ['./pacienti.component.css']\r\n    })\r\n], PacientiComponent);\r\nexport { PacientiComponent };\r\n"]},"metadata":{},"sourceType":"module"}