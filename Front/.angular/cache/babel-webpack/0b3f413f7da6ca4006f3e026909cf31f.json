{"ast":null,"code":"import _asyncToGenerator from \"D:/Licenta/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../radiografie.service\";\nimport * as i2 from \"@angular/platform-browser\";\nimport * as i3 from \"../navbar-doctor/navbar-doctor.component\";\nexport class RadiografiiComponent {\n  constructor(radiografieService, sanitizer) {\n    this.radiografieService = radiografieService;\n    this.sanitizer = sanitizer;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    this.radiografieService.getAll().subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this.radiografii = response;\n          console.log(_this.radiografii);\n        });\n\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        alert(error.message);\n      }\n    });\n    this.radiografii.forEach(function (radiografie) {\n      console.log(radiografie);\n    }); // this.radiografieService.getRadiografie(\"radiografie.jpg\").subscribe({\n    //   next: (response:Radiografie) => {\n    //     this.retrieveResponse = response;\n    //     this.base64Data = this.retrieveResponse.picByte;\n    //     this.image = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \n    //     + this.base64Data);\n    //   },\n    //   error: (error:HttpErrorResponse) => {\n    //     alert(error.message);\n    //   }\n    // });\n    // this.radiografieService.getRadiografie(\"salut.jpg\").subscribe({\n    //   next: (response:Radiografie) => {\n    //     this.retrieveResponse = response;\n    //     this.base64Data = this.retrieveResponse.picByte;\n    //     this.image = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \n    //     + this.base64Data);\n    //   },\n    //   error: (error:HttpErrorResponse) => {\n    //     alert(error.message);\n    //   }\n    // });\n  }\n\n}\n\nRadiografiiComponent.ɵfac = function RadiografiiComponent_Factory(t) {\n  return new (t || RadiografiiComponent)(i0.ɵɵdirectiveInject(i1.RadiografieService), i0.ɵɵdirectiveInject(i2.DomSanitizer));\n};\n\nRadiografiiComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RadiografiiComponent,\n  selectors: [[\"app-radiografii\"]],\n  decls: 2,\n  vars: 1,\n  consts: [[2, \"width\", \"30%\", 3, \"src\"]],\n  template: function RadiografiiComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar-doctor\");\n      i0.ɵɵelement(1, \"img\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.image, i0.ɵɵsanitizeUrl);\n    }\n  },\n  directives: [i3.NavbarDoctorComponent],\n  styles: [\"img[_ngcontent-%COMP%]{\\r\\n    border-radius: 8px;\\r\\n\\r\\n}\\r\\ndiv.polaroid[_ngcontent-%COMP%] {\\r\\n    width: 80%;\\r\\n    background-color: white;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    margin-bottom: 25px;\\r\\n  }\\r\\ndiv.container[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    padding: 10px 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvZ3JhZmlpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7O0FBRXRCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsdUJBQXVCO0lBQ3ZCLDRFQUE0RTtJQUM1RSxtQkFBbUI7RUFDckI7QUFDQTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7RUFDcEIiLCJmaWxlIjoicmFkaW9ncmFmaWkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZ3tcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuXHJcbn1cclxuZGl2LnBvbGFyb2lkIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gIH1cclxuICBkaXYuY29udGFpbmVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICB9Il19 */\"]\n});","map":{"version":3,"sources":["D:/Licenta/Front/src/app/radiografii/radiografii.component.ts"],"names":["i0","i1","i2","i3","RadiografiiComponent","constructor","radiografieService","sanitizer","ngOnInit","getAll","subscribe","next","response","radiografii","console","log","error","alert","message","forEach","radiografie","ɵfac","RadiografiiComponent_Factory","t","ɵɵdirectiveInject","RadiografieService","DomSanitizer","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","RadiografiiComponent_Template","rf","ctx","ɵɵelement","ɵɵadvance","ɵɵproperty","image","ɵɵsanitizeUrl","directives","NavbarDoctorComponent","styles"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0CAApB;AACA,OAAO,MAAMC,oBAAN,CAA2B;AAC9BC,EAAAA,WAAW,CAACC,kBAAD,EAAqBC,SAArB,EAAgC;AACvC,SAAKD,kBAAL,GAA0BA,kBAA1B;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDC,EAAAA,QAAQ,GAAG;AAAA;;AACP,SAAKF,kBAAL,CAAwBG,MAAxB,GAAiCC,SAAjC,CAA2C;AACvCC,MAAAA,IAAI;AAAA,qCAAE,WAAOC,QAAP,EAAoB;AACtB,UAAA,KAAI,CAACC,WAAL,GAAmBD,QAAnB;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACF,WAAjB;AACH,SAHG;;AAAA;AAAA;AAAA;AAAA,SADmC;AAKvCG,MAAAA,KAAK,EAAGA,KAAD,IAAW;AACdC,QAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH;AAPsC,KAA3C;AASA,SAAKL,WAAL,CAAiBM,OAAjB,CAAyB,UAAUC,WAAV,EAAuB;AAC5CN,MAAAA,OAAO,CAACC,GAAR,CAAYK,WAAZ;AACH,KAFD,EAVO,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAxC6B;;AA0ClChB,oBAAoB,CAACiB,IAArB,GAA4B,SAASC,4BAAT,CAAsCC,CAAtC,EAAyC;AAAE,SAAO,KAAKA,CAAC,IAAInB,oBAAV,EAAgCJ,EAAE,CAACwB,iBAAH,CAAqBvB,EAAE,CAACwB,kBAAxB,CAAhC,EAA6EzB,EAAE,CAACwB,iBAAH,CAAqBtB,EAAE,CAACwB,YAAxB,CAA7E,CAAP;AAA6H,CAApM;;AACAtB,oBAAoB,CAACuB,IAArB,GAA4B,aAAc3B,EAAE,CAAC4B,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAEzB,oBAAR;AAA8B0B,EAAAA,SAAS,EAAE,CAAC,CAAC,iBAAD,CAAD,CAAzC;AAAgEC,EAAAA,KAAK,EAAE,CAAvE;AAA0EC,EAAAA,IAAI,EAAE,CAAhF;AAAmFC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,OAAJ,EAAa,KAAb,EAAoB,CAApB,EAAuB,KAAvB,CAAD,CAA3F;AAA4HC,EAAAA,QAAQ,EAAE,SAASC,6BAAT,CAAuCC,EAAvC,EAA2CC,GAA3C,EAAgD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC3PpC,MAAAA,EAAE,CAACsC,SAAH,CAAa,CAAb,EAAgB,mBAAhB;AACAtC,MAAAA,EAAE,CAACsC,SAAH,CAAa,CAAb,EAAgB,KAAhB,EAAuB,CAAvB;AACH;;AAAC,QAAIF,EAAE,GAAG,CAAT,EAAY;AACVpC,MAAAA,EAAE,CAACuC,SAAH,CAAa,CAAb;AACAvC,MAAAA,EAAE,CAACwC,UAAH,CAAc,KAAd,EAAqBH,GAAG,CAACI,KAAzB,EAAgCzC,EAAE,CAAC0C,aAAnC;AACH;AAAE,GANwD;AAMtDC,EAAAA,UAAU,EAAE,CAACxC,EAAE,CAACyC,qBAAJ,CAN0C;AAMdC,EAAAA,MAAM,EAAE,CAAC,upCAAD;AANM,CAArB,CAA1C","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../radiografie.service\";\r\nimport * as i2 from \"@angular/platform-browser\";\r\nimport * as i3 from \"../navbar-doctor/navbar-doctor.component\";\r\nexport class RadiografiiComponent {\r\n    constructor(radiografieService, sanitizer) {\r\n        this.radiografieService = radiografieService;\r\n        this.sanitizer = sanitizer;\r\n    }\r\n    ngOnInit() {\r\n        this.radiografieService.getAll().subscribe({\r\n            next: async (response) => {\r\n                this.radiografii = response;\r\n                console.log(this.radiografii);\r\n            },\r\n            error: (error) => {\r\n                alert(error.message);\r\n            }\r\n        });\r\n        this.radiografii.forEach(function (radiografie) {\r\n            console.log(radiografie);\r\n        });\r\n        // this.radiografieService.getRadiografie(\"radiografie.jpg\").subscribe({\r\n        //   next: (response:Radiografie) => {\r\n        //     this.retrieveResponse = response;\r\n        //     this.base64Data = this.retrieveResponse.picByte;\r\n        //     this.image = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \r\n        //     + this.base64Data);\r\n        //   },\r\n        //   error: (error:HttpErrorResponse) => {\r\n        //     alert(error.message);\r\n        //   }\r\n        // });\r\n        // this.radiografieService.getRadiografie(\"salut.jpg\").subscribe({\r\n        //   next: (response:Radiografie) => {\r\n        //     this.retrieveResponse = response;\r\n        //     this.base64Data = this.retrieveResponse.picByte;\r\n        //     this.image = this.sanitizer.bypassSecurityTrustResourceUrl('data:image/jpg;base64,' \r\n        //     + this.base64Data);\r\n        //   },\r\n        //   error: (error:HttpErrorResponse) => {\r\n        //     alert(error.message);\r\n        //   }\r\n        // });\r\n    }\r\n}\r\nRadiografiiComponent.ɵfac = function RadiografiiComponent_Factory(t) { return new (t || RadiografiiComponent)(i0.ɵɵdirectiveInject(i1.RadiografieService), i0.ɵɵdirectiveInject(i2.DomSanitizer)); };\r\nRadiografiiComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: RadiografiiComponent, selectors: [[\"app-radiografii\"]], decls: 2, vars: 1, consts: [[2, \"width\", \"30%\", 3, \"src\"]], template: function RadiografiiComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelement(0, \"app-navbar-doctor\");\r\n        i0.ɵɵelement(1, \"img\", 0);\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"src\", ctx.image, i0.ɵɵsanitizeUrl);\r\n    } }, directives: [i3.NavbarDoctorComponent], styles: [\"img[_ngcontent-%COMP%]{\\r\\n    border-radius: 8px;\\r\\n\\r\\n}\\r\\ndiv.polaroid[_ngcontent-%COMP%] {\\r\\n    width: 80%;\\r\\n    background-color: white;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    margin-bottom: 25px;\\r\\n  }\\r\\ndiv.container[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    padding: 10px 20px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhZGlvZ3JhZmlpLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7O0FBRXRCO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsdUJBQXVCO0lBQ3ZCLDRFQUE0RTtJQUM1RSxtQkFBbUI7RUFDckI7QUFDQTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7RUFDcEIiLCJmaWxlIjoicmFkaW9ncmFmaWkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZ3tcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuXHJcbn1cclxuZGl2LnBvbGFyb2lkIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG4gIH1cclxuICBkaXYuY29udGFpbmVyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweDtcclxuICB9Il19 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}