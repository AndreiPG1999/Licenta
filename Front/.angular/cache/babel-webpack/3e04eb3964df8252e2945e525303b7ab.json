{"ast":null,"code":"import _asyncToGenerator from \"D:/Licenta/Front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet PassChangeComponent = class PassChangeComponent {\n  constructor(authService, notifyService, token) {\n    this.authService = authService;\n    this.notifyService = notifyService;\n    this.token = token;\n    this.error = \"Password change failed!\";\n    this.submitted = false;\n  }\n\n  showToasterSuccess() {\n    this.notifyService.showSuccess(\"Login successful !!\");\n  }\n\n  ngOnInit() {\n    this.currentUser = this.token.getUser();\n    this.changePassForm = new FormGroup({\n      old_pass: new FormControl('', [Validators.required, Validators.minLength(8)]),\n      new_pass: new FormControl('', [Validators.required, Validators.minLength(8)])\n    });\n  }\n\n  onSubmit(changePassForm) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.submitted = true;\n\n      if (changePassForm.valid) {// this.userService.updatePassword(this.currentUser.email,this.changePassForm.controls['new_pass'].value).subscribe({\n        //   next: async (response: User) => {\n        //     console.log(response);\n        //     this.showToasterSuccess();\n        //     await new Promise(f => setTimeout(f, 1000));\n        //     changePassForm.reset();\n        //     this.submitted = false;\n        //   },\n        //   error: (error:HttpErrorResponse) => {\n        //     alert(error.message);\n        //   }\n        // });\n      }\n    })();\n  }\n\n};\nPassChangeComponent = __decorate([Component({\n  selector: 'app-pass-change',\n  templateUrl: './pass-change.component.html',\n  styleUrls: ['./pass-change.component.css']\n})], PassChangeComponent);\nexport { PassChangeComponent };","map":{"version":3,"sources":["D:/Licenta/Front/src/app/pass-change/pass-change.component.ts"],"names":["__decorate","Component","FormControl","FormGroup","Validators","PassChangeComponent","constructor","authService","notifyService","token","error","submitted","showToasterSuccess","showSuccess","ngOnInit","currentUser","getUser","changePassForm","old_pass","required","minLength","new_pass","onSubmit","valid","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;AACA,IAAIC,mBAAmB,GAAG,MAAMA,mBAAN,CAA0B;AAChDC,EAAAA,WAAW,CAACC,WAAD,EAAcC,aAAd,EAA6BC,KAA7B,EAAoC;AAC3C,SAAKF,WAAL,GAAmBA,WAAnB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,KAAL,GAAa,yBAAb;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACH;;AACDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKJ,aAAL,CAAmBK,WAAnB,CAA+B,qBAA/B;AACH;;AACDC,EAAAA,QAAQ,GAAG;AACP,SAAKC,WAAL,GAAmB,KAAKN,KAAL,CAAWO,OAAX,EAAnB;AACA,SAAKC,cAAL,GAAsB,IAAId,SAAJ,CAAc;AAChCe,MAAAA,QAAQ,EAAE,IAAIhB,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACe,QAAZ,EAAsBf,UAAU,CAACgB,SAAX,CAAqB,CAArB,CAAtB,CAApB,CADsB;AAEhCC,MAAAA,QAAQ,EAAE,IAAInB,WAAJ,CAAgB,EAAhB,EAAoB,CAACE,UAAU,CAACe,QAAZ,EAAsBf,UAAU,CAACgB,SAAX,CAAqB,CAArB,CAAtB,CAApB;AAFsB,KAAd,CAAtB;AAIH;;AACKE,EAAAA,QAAQ,CAACL,cAAD,EAAiB;AAAA;;AAAA;AAC3B,MAAA,KAAI,CAACN,SAAL,GAAiB,IAAjB;;AACA,UAAIM,cAAc,CAACM,KAAnB,EAA0B,CACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAf0B;AAgB9B;;AAlC+C,CAApD;AAoCAlB,mBAAmB,GAAGL,UAAU,CAAC,CAC7BC,SAAS,CAAC;AACNuB,EAAAA,QAAQ,EAAE,iBADJ;AAENC,EAAAA,WAAW,EAAE,8BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,6BAAD;AAHL,CAAD,CADoB,CAAD,EAM7BrB,mBAN6B,CAAhC;AAOA,SAASA,mBAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nlet PassChangeComponent = class PassChangeComponent {\r\n    constructor(authService, notifyService, token) {\r\n        this.authService = authService;\r\n        this.notifyService = notifyService;\r\n        this.token = token;\r\n        this.error = \"Password change failed!\";\r\n        this.submitted = false;\r\n    }\r\n    showToasterSuccess() {\r\n        this.notifyService.showSuccess(\"Login successful !!\");\r\n    }\r\n    ngOnInit() {\r\n        this.currentUser = this.token.getUser();\r\n        this.changePassForm = new FormGroup({\r\n            old_pass: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n            new_pass: new FormControl('', [Validators.required, Validators.minLength(8)])\r\n        });\r\n    }\r\n    async onSubmit(changePassForm) {\r\n        this.submitted = true;\r\n        if (changePassForm.valid) {\r\n            // this.userService.updatePassword(this.currentUser.email,this.changePassForm.controls['new_pass'].value).subscribe({\r\n            //   next: async (response: User) => {\r\n            //     console.log(response);\r\n            //     this.showToasterSuccess();\r\n            //     await new Promise(f => setTimeout(f, 1000));\r\n            //     changePassForm.reset();\r\n            //     this.submitted = false;\r\n            //   },\r\n            //   error: (error:HttpErrorResponse) => {\r\n            //     alert(error.message);\r\n            //   }\r\n            // });\r\n        }\r\n    }\r\n};\r\nPassChangeComponent = __decorate([\r\n    Component({\r\n        selector: 'app-pass-change',\r\n        templateUrl: './pass-change.component.html',\r\n        styleUrls: ['./pass-change.component.css']\r\n    })\r\n], PassChangeComponent);\r\nexport { PassChangeComponent };\r\n"]},"metadata":{},"sourceType":"module"}